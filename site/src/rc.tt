[%
rule_classes = {
	abstract => [
		{
			name => 'Finite expansion set',
			label => 'fes',
			description => 
"This abstract class ensures the finiteness of <em>forward
chaining</em> algorithms that saturate facts until the halting
condition is satisfied and check if the query maps to the obtained
facts."
		},
		{
			name => 'Finite unification set',
			label => 'fus',
			description =>
"This abstract class ensures the finiteness of any <em>backward
chaining</em> algorithm thath rewrites the query in a breadth-first
manner while maintaining a set of the <em>most general
rewritings</em> and answers 'yes' if an element of this set maps to
the facts."
		},
		{
			name => '(Greedy) Bounded treewidth set',
			label => 'bts',
			description =>
"The BTS class, which strictly includes FES, ensures decidability,
although there is currently no algorithm available for this class.
However, <em>Greedy Bounded Treewidth Set (GBTS)</em> is an
expressive subclass of BTS that is provided with a forward chaining
like halting algorithm. Note that, except for <em>glut-fg</em>
(cf. Figure), all currently known BTS but not FES classes are GBTS."
		}
	],
	concrete => [
		{
			name => 'Acyclic graph of rule dependencies',
			label => 'agrd',
			type => 'global',
			ensures => [ 'fes', 'fus' ],
			description =>
"The associated <a href='#grd'>graph of rule dependencies</a> does
not contain any circuit."
		},
		{
			name => 'Datalog',
			type => 'link',
			label => 'dlg',
			link_label => 'rr',
			link_name => 'Range-restricted'
		},
		{
			name => 'Disconnected',
			label => 'disc',
			type => 'local',
			ensures => [ 'fes', 'fus', 'gbts' ],
			description =>
"The frontier is empty. Note that any disconnected rule needs to be
applied only once."
		},
		{
			name => 'Domain-restricted',
			label => 'dr',
			type => 'local',
			ensures => [ 'fus' ],
			description =>
"All atoms in the head contain either all or none variables from the
body."
		},
		{
			name => 'Frontier-guarded',
			label => 'fg',
			type => 'local',
			ensures => [ 'gbts' ],
			description =>
"At least one atom in the body contains all the variables from the
frontier."
		},
		{
			name => 'Frontier-one',
			label => 'fr1',
			type => 'local',
			ensures => [ 'gbts' ],
			description =>
"The frontier contains only one variable."
		},
		{
			name => 'Guarded',
			label => 'g',
			type => 'local',
			ensures => 'gbts',
			description =>
"At least one atom in the body (called a <em>guard</em>) contains
all the variable from the body."
		},
		{
			name => 'Linear',
			label => 'lin',
			type => 'local',
			ensures => [ 'fus', 'gbts' ],
			description =>
"The body contains only a single atom."
		},
		{
			name => 'Range-restricted',
			label => 'rr',
			type => 'local',
			ensures => [ 'fes', 'gbts' ],
			description =>
"All variables that appear in the in the head also occur in the
body."
		},
		{
			name => 'Sticky',
			label => 's',
			type => 'global',
			ensures => [ 'fus' ],
			description =>
"Each marked variable occurs at most once in a rule body (cf. <a
href='#marked'>marked variable set</a>)."
		},
		{
			name => 'Weakly-acyclic',
			label => 'wa',
			type => 'global',
			ensures => [ 'fes' ],
			description =>
"All predicate positions in the <a href='#gp'>graph of position
dependencies</a> have finite rank (i.e., there is no circuit with
special edge)."
		},
		{
			name => 'Weakly-frontier-guarded',
			label => 'wfg',
			type => 'global',
			ensures => [ 'gbts' ],
			description =>
"At least one atom in the body of each rule contains all affected
variable from the frontier 
(cf. <a href='#affected'>affected position set</a>)."
		},
		{
			name => 'Weakly-guarded',
			label => 'wg',
			type => 'global',
			ensures => [ 'gbts' ],
			description =>
"At least one atom in the body of each rule contains all affected
variables from the body 
(cf. <a href='#affected'>affected position set</a>)."
		},
		{
			name => 'Weakly-sticky',
			label => 'ws',
			type => 'global',
			ensures => [ ],
			description =>
"This class does not belong to any abstract class defined earlier.
It is a generalisation of <a href='#s'>Sticky</a> and
<a href='#wa'>Weakly-Acyclic</a>. It relies upon the same
<a href='#gp'>graph of position dependencies</a> as the
<a href='#wa'>Weakly-Acyclic</a> test and upon the same
<a href='#marked'>marking procedure</a> as the <a
href='#s'>Sticky</a> test.
All marked variables that occur more than once in a rule body appear
at some position of finite rank."
		}
	]
}
%]

